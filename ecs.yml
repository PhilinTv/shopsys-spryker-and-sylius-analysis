imports:
    - { resource: 'vendor/symplify/easy-coding-standard/config/psr2.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/symfony.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/php71.yml' }
    # custom
    - { resource: 'vendor/symplify/easy-coding-standard/config/symplify.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/common.yml' }
    - { resource: 'vendor/symplify/easy-coding-standard/config/clean-code.yml' }

services:
    # Slevomat
    SlevomatCodingStandard\Sniffs\Namespaces\ReferenceUsedNamesOnlySniff:
        allowPartialUses: false
    SlevomatCodingStandard\Sniffs\ControlStructures\AssignmentInConditionSniff: ~
    SlevomatCodingStandard\Sniffs\TypeHints\TypeHintDeclarationSniff:
        enableEachParameterAndReturnInspection: true
    SlevomatCodingStandard\Sniffs\Exceptions\ReferenceThrowableOnlySniff: ~

    Symplify\CodingStandard\Sniffs\CleanCode\CognitiveComplexitySniff: ~

    Symplify\CodingStandard\Sniffs\DependencyInjection\NoClassInstantiationSniff:
        extraAllowedClasses:
            # already on dev-master, remove after that
            - 'Nette\Loaders\RobotLoader'
            - 'Symfony\Component\Process\Process'
            # has to be create manually, singleton :(
            - 'SebastianBergmann\PHPLOC\Analyser'
            - 'SebastianBergmann\PHPCPD\Detector\Detector'
            - 'SebastianBergmann\PHPCPD\Detector\Strategy\DefaultStrategy'

parameters:
    exclude_checkers:
        # from PHP-CS-Fixer Symfony set
        - 'PhpCsFixer\Fixer\PhpTag\BlankLineAfterOpeningTagFixer'
        - 'PhpCsFixer\Fixer\Operator\NewWithBracesFixer'
        - 'PhpCsFixer\Fixer\Phpdoc\PhpdocAlignFixer'
        - 'PhpCsFixer\Fixer\Operator\UnaryOperatorSpacesFixer'
        - 'PhpCsFixer\Fixer\ControlStructure\YodaStyleFixer'
        - 'PhpCsFixer\Fixer\Phpdoc\PhpdocSeparationFixer'
